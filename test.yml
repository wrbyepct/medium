version: "3.9"

services:

  postgres:
    container_name: postgres
    build:
      context: ./docker/local/postgres
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: ${DATABASE_URL}

    restart: always
    networks:
      - medium-api

  redis:
    container_name: redis
    image: redis:7.4-alpine
    networks:
      - medium-api

  es: 
    container_name: es
    image: elasticsearch:8.17.0
    environment:
     - discovery.type=single-node
     - xpack.security.enabled=false

    networks:
     - medium-api

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    environment:
      IN_GITHUB: "true"
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: ${DATABASE_URL}

      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      JWT_SIGNING_KEY: ${JWT_SIGNING_KEY}
      CELERY_BROKER: ${CELERY_BROKER}

    depends_on:
      - postgres
      - redis
      - es
    command: /start
    restart: always
    networks:
      - medium-api


  celery_worker:
    container_name: celery
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    environment:
      IN_GITHUB: "true"
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: ${DATABASE_URL}

      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      JWT_SIGNING_KEY: ${JWT_SIGNING_KEY}
      CELERY_BROKER: ${CELERY_BROKER}
    command: /start_celeryworker
    depends_on:
      - redis
      - postgres
    networks:
      - medium-api


networks:
  medium-api:
    driver: bridge

  
